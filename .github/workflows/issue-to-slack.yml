# .github/workflows/notify-slack-issue.yml
name: Notify Slack on New Issue

on:
  issues:
    types: [opened]

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Validate Slack Webhook
        run: |
          if [[ -z "${{ secrets.SLACK_WEBHOOK }}" ]]; then
            echo "‚ùå SLACK_WEBHOOK secret is not set"
            exit 1
          fi

      - name: Prepare Slack Payload
        run: |
          # extract label names and join with commas
          labels=$(jq -r '.issue.labels[].name' "$GITHUB_EVENT_PATH" \
                   | paste -sd ", " -)
          [[ -z "$labels" ]] && labels="No labels"

          # extract title, assignee, repo and URL
          title=$(jq -r '.issue.title' "$GITHUB_EVENT_PATH")
          assignee=$(jq -r '.issue.assignee.login // "Unassigned"' "$GITHUB_EVENT_PATH")
          repo=$(jq -r '.repository.full_name' "$GITHUB_EVENT_PATH")
          url=$(jq -r '.issue.html_url' "$GITHUB_EVENT_PATH")

          # build the Slack message payload
          jq -n \
            --arg header "üêû New Issue Created" \
            --arg repo "üìå Repo: $repo" \
            --arg labels "üö® Labels: $labels" \
            --arg title "üìù Title: $title" \
            --arg assignee "üë§ Assigned To: $assignee" \
            --arg url "$url" \
            '{
              text: $header,
              blocks: [
                { type: "header", text: { type: "plain_text", text: $header, emoji: true } },
                { type: "section",
                  fields: [
                    { type: "mrkdwn", text: "*" + $repo + "*" },
                    { type: "mrkdwn", text: "*" + $labels + "*" },
                    { type: "mrkdwn", text: "*" + $title + "*" },
                    { type: "mrkdwn", text: "*" + $assignee + "*" }
                  ]
                },
                { type: "section",
                  text: { type: "mrkdwn", text: "<" + $url + "|üîó View Issue>" }
                }
              ]
            }' > payload.json

      - name: Send Slack Notification
        run: |
          curl -X POST \
               -H 'Content-Type: application/json' \
               --data @payload.json \
               "${{ secrets.SLACK_WEBHOOK }}"
        continue-on-error: true
