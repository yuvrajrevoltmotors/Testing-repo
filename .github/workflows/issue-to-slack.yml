name: Notify Slack on Issue Created

on:
  issues:
    types: [opened]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Debug GitHub Event
        run: echo "${{ toJson(github.event.issue) }}"

      - name: Check Slack Webhook
        run: |
          if [ -z "${{ secrets.SLACK_WEBHOOK }}" ]; then
            echo "SLACK_WEBHOOK is not set or empty"
            exit 1
          else
            echo "SLACK_WEBHOOK is set"
          fi

      - name: Prepare Payload
        id: prepare_payload
        run: |
          # Escape variables with jq to handle special characters
          TITLE=$(echo '${{ github.event.issue.title || 'No Title' }}' | jq -R -s .)
          ASSIGNEE=$(echo '${{ github.event.issue.assignee.login || 'Unassigned' }}' | jq -R -s .)
          PRIORITY=$(echo '${{ github.event.issue.labels[0].name || 'Not Set' }}' | jq -R -s .)
          ISSUE_URL=$(echo '${{ github.event.issue.html_url || 'No URL' }}' | jq -R -s .)

          # Use jq to construct JSON to avoid shell escaping issues
          jq -n \
            --arg text "üêû New GitHub Issue Created" \
            --arg project "Revolt Motors Website" \
            --arg priority "$PRIORITY" \
            --arg title "$TITLE" \
            --arg assignee "$ASSIGNEE" \
            --arg issue_url "$ISSUE_URL" \
            '{
              "text": $text,
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": $text,
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*üìå Project:*\n" + $project
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*üö® Priority:*\n" + $priority
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*üìù Title:*\n" + $title
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*üë§ Assigned To:*\n" + $assignee
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<" + $issue_url + "|üîó View Issue>"
                  }
                }
              ]
            }' > payload.json
          cat payload.json

      - name: Validate Payload
        run: jq . payload.json || echo "Invalid JSON in payload.json"

      - name: Send Slack notification
        id: send_slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload-file-path: payload.json
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true

      - name: Debug Slack Notification
        run: echo "Slack notification step completed with exit code $?"

      - name: Send Slack notification via curl (Fallback)
        run: |
          curl -X POST -H 'Content-type: application/json' --data @payload.json ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true

      - name: Debug Curl Notification
        run: echo "Curl notification step completed with exit code $?"
