name: Notify Slack on Issue Created

on:
  issues:
    types: [opened]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Prepare Label List
        id: prepare_labels
        run: |
          LABELS=("${{ github.event.issue.labels[*].name }}")
          if [ -z "${LABELS[*]}" ]; then
            LABELS_JSON='["Not Set"]'
          else
            LABELS_JSON=$(jq -n --args "${LABELS[@]}" '[ $ARGS.positional[] ]')
          fi
          echo "Labels JSON Content: $LABELS_JSON"
          echo "labels=$LABELS_JSON" >> $GITHUB_OUTPUT

      - name: Prepare Payload
        id: build_payload
        run: |
          PAYLOAD=$(jq -n \
            --arg text "üêû New GitHub Issue Created" \
            --arg title "${{ github.event.issue.title }}" \
            --arg assignee "${{ github.event.issue.assignee.login || 'Unassigned' }}" \
            --arg issue_url "${{ github.event.issue.html_url }}" \
            --arg labels_txt "$(echo '${{ steps.prepare_labels.outputs.labels }}' | jq -r 'join(", ")')" \
            ' {
              "text": $text,
              "blocks": [
                {
                  "type": "header",
                  "text": { "type": "plain_text", "text": $text, "emoji": true }
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*üìå Project:*\nRevolt Motors Website" },
                    { "type": "mrkdwn", "text": "*üö® Labels:*\n" + $labels_txt },
                    { "type": "mrkdwn", "text": "*üìù Title:*\n" + $title },
                    { "type": "mrkdwn", "text": "*üë§ Assigned To:*\n" + $assignee }
                  ]
                },
                {
                  "type": "section",
                  "text": { "type": "mrkdwn", "text": "<" + $issue_url + "|üîó View Issue>" }
                }
              ]
            }')
          echo "$PAYLOAD" > payload.json
          echo "Payload JSON Content:"
          cat payload.json

      - name: Send Slack Notification via curl
        run: |
          curl -X POST -H 'Content-type: application/json' --data @payload.json ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true
