name: Notify Slack on New Issue

on:
  issues:
    types: [opened]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Validate Slack Webhook
        run: |
          if [[ -z "${{ secrets.SLACK_WEBHOOK }}" ]]; then
            echo "‚ùå SLACK_WEBHOOK secret is not set"
            exit 1
          fi

      - name: Prepare Slack Payload
        run: |
          # Read the GitHub event JSON
          EVENT="$GITHUB_EVENT_PATH"

          # Join all label names, or fall back if none
          labels=$(jq -r '.issue.labels[].name' "$EVENT" | paste -sd ", " -)
          [[ -z "$labels" ]] && labels="No labels"

          # Extract other fields
          title=$(jq -r '.issue.title' "$EVENT")
          assignee=$(jq -r '.issue.assignee.login // "Unassigned"' "$EVENT")
          repo=$(jq -r '.repository.full_name' "$EVENT")
          url=$(jq -r '.issue.html_url' "$EVENT")

          # Build JSON with jq, using string interpolation for safety
          jq -n \
            --arg header "üêû New Issue Created" \
            --arg repo    "$repo" \
            --arg labels  "$labels" \
            --arg title   "$title" \
            --arg assignee "$assignee" \
            --arg url     "$url" \
          '{
             text: $header,
             blocks: [
               {
                 type: "header",
                 text: { type: "plain_text", text: $header, emoji: true }
               },
               {
                 type: "section",
                 fields: [
                   { type: "mrkdwn", text: "*üìå Repo:* \($repo)" },
                   { type: "mrkdwn", text: "*üö® Labels:* \($labels)" },
                   { type: "mrkdwn", text: "*üìù Title:* \($title)" },
                   { type: "mrkdwn", text: "*üë§ Assigned To:* \($assignee)" }
                 ]
               },
               {
                 type: "section",
                 text: { type: "mrkdwn", text: "<\($url)|üîó View Issue>" }
               }
             ]
           }' > payload.json

          # sanity-check
          cat payload.json

      - name: Send Slack Notification
        run: |
          curl -X POST \
               -H 'Content-Type: application/json' \
               --data @payload.json \
               "${{ secrets.SLACK_WEBHOOK }}"
        continue-on-error: true
