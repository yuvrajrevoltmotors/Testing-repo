name: Notify Slack on Issue Created

on:
  issues:
    types: [opened]

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Prepare Slack Payload
        run: |
          LABELS_JSON=${{ toJSON(github.event.issue.labels) }}
          echo "Extracted labels: $LABELS_JSON"

          jq -n \
            --arg text "üêû New GitHub Issue Created" \
            --arg title "${{ github.event.issue.title }}" \
            --arg assignee "${{ github.event.issue.assignee.login || 'Unassigned' }}" \
            --arg issue_url "${{ github.event.issue.html_url }}" \
            --argjson labels "$LABELS_JSON" \
            '{
              "text": $text,
              "blocks": [
                {
                  "type": "header",
                  "text": { "type": "plain_text", "text": $text, "emoji": true }
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*üìå Project:*\nRevolt Motors Website" },
                    { "type": "mrkdwn", "text": "*üö® Labels:*\n\((labels | map(.name) | join(", ")) // "Not Set")" },
                    { "type": "mrkdwn", "text": "*üìù Title:*\n\($title)" },
                    { "type": "mrkdwn", "text": "*üë§ Assigned To:*\n\($assignee)" }
                  ]
                },
                {
                  "type": "section",
                  "text": { "type": "mrkdwn", "text": "<\($issue_url)|üîó View Issue>" }
                }
              ]
            }' > payload.json

          echo "Payload prepared:"
          cat payload.json



      - name: Send Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data @payload.json ${{ secrets.SLACK_WEBHOOK }}
