name: Notify Slack on Issue Created

on:
  issues:
    types: [opened]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Debug GitHub Event
        run: echo "${{ toJson(github.event.issue) }}"

      - name: Check Slack Webhook
        run: |
          if [ -z "${{ secrets.SLACK_WEBHOOK }}" ]; then
            echo "SLACK_WEBHOOK is not set or empty"
            exit 1
          else
            echo "SLACK_WEBHOOK is set"
          fi

      - name: Debug Variables
        run: |
          echo "Raw Title: ${{ github.event.issue.title }}"
          echo "Raw Assignee: ${{ github.event.issue.assignee.login || 'Unassigned' }}"
          echo "Raw Priority: ${{ github.event.issue.labels[0].name || 'Not Set' }}"
          echo "Raw Issue URL: ${{ github.event.issue.html_url }}"
          TITLE=$(echo '${{ github.event.issue.title || 'No Title' }}' | jq -R -s . 2>/dev/null || echo '"No Title"')
          ASSIGNEE=$(echo '${{ github.event.issue.assignee.login || 'Unassigned' }}' | jq -R -s . 2>/dev/null || echo '"Unassigned"')
          PRIORITY=$(echo '${{ github.event.issue.labels[0].name || 'Not Set' }}' | jq -R -s . 2>/dev/null || echo '"Not Set"')
          ISSUE_URL=$(echo '${{ github.event.issue.html_url || 'No URL' }}' | jq -R -s . 2>/dev/null || echo '"No URL"')
          echo "Escaped Title: $TITLE"
          echo "Escaped Assignee: $ASSIGNEE"
          echo "Escaped Priority: $PRIORITY"
          echo "Escaped Issue URL: $ISSUE_URL"

      - name: Prepare Payload
        id: prepare_payload
        run: |
          TITLE=$(echo '${{ github.event.issue.title || 'No Title' }}' | jq -R -s . 2>/dev/null || echo '"No Title"')
          ASSIGNEE=$(echo '${{ github.event.issue.assignee.login || 'Unassigned' }}' | jq -R -s . 2>/dev/null || echo '"Unassigned"')
          PRIORITY=$(echo '${{ github.event.issue.labels[0].name || 'Not Set' }}' | jq -R -s . 2>/dev/null || echo '"Not Set"')
          ISSUE_URL=$(echo '${{ github.event.issue.html_url || 'No URL' }}' | jq -R -s . 2>/dev/null || echo '"No URL"')
          cat <<EOF > payload.json
          {
            "text": "üêû New GitHub Issue Created",
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "üêû New GitHub Issue Created",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*üìå Project:*\nRevolt Motors Website"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*üö® Priority:*\n$PRIORITY"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*üìù Title:*\n$TITLE"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*üë§ Assigned To:*\n$ASSIGNEE"
                  }
                ]
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "<$ISSUE_URL|üîó View Issue>"
                }
              }
            ]
          }
          EOF
          cat payload.json
          jq . payload.json || echo "Invalid JSON in payload.json"

      - name: Send Slack notification
        id: send_slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload-file-path: payload.json
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true

      - name: Debug Slack Notification
        run: echo "Slack notification step completed with exit code $?"

      - name: Send Slack notification via curl (Fallback)
        run: |
          curl -X POST -H 'Content-type: application/json' --data @payload.json ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true

      - name: Debug Curl Notification
        run: echo "Curl notification step completed with exit code $?"
