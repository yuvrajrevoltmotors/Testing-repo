name: Notify Slack on Issue Created

on:
  issues:
    types: [opened]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Check Slack Webhook
        run: |
          if [ -z "${{ secrets.SLACK_WEBHOOK }}" ]; then
            echo "SLACK_WEBHOOK is not set or empty"
            exit 1
          else
            echo "SLACK_WEBHOOK is set"
          fi

      - name: Prepare Payload
        run: |
          # Safely write labels JSON to a file
          printf '%s' "${{ toJson(github.event.issue.labels) }}" > labels.json 2>/dev/null || echo "[]" > labels.json
          LABELS=$(jq -r '[.[]?.name] | join(", ")' labels.json 2>/dev/null || echo "Not Set")
          # Safely handle body preview
          BODY_PREVIEW=$(printf '%s' "${{ github.event.issue.body || 'No Body' }}" | jq -r '. | if . == "No Body" then . else (. | tostring | .[0:50]) end' 2>/dev/null || echo "No Body")
          jq -n \
            --arg text "üêû New GitHub Issue Created" \
            --arg title "${{ github.event.issue.title || 'No Title' }}" \
            --arg assignee "${{ github.event.issue.assignee.login || 'Unassigned' }}" \
            --arg Labels "$LABELS" \
            --arg body_preview "$BODY_PREVIEW" \
            --arg issue_url "${{ github.event.issue.html_url || 'No URL' }}" \
            '{
              "text": $text,
              "blocks": [
                {
                  "type": "header",
                  "text": { "type": "plain_text", "text": $text, "emoji": true }
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*üìå Project:*\nRevolt Motors Website" },
                    { "type": "mrkdwn", "text": "*üö® Labels:*\n\($Labels)" },
                    { "type": "mrkdwn", "text": "*üìù Title:*\n\($title)" },
                    { "type": "mrkdwn", "text": "*üë§ Assigned To:*\n\($assignee)" },
                    { "type": "mrkdwn", "text": "*üìÑ Body Preview:*\n\($body_preview)" }
                  ]
                },
                {
                  "type": "section",
                  "text": { "type": "mrkdwn", "text": "<\($issue_url)|üîó View Issue>" }
                }
              ]
            }' > payload.json
          cat payload.json
          jq . payload.json 2>/dev/null || echo "Invalid JSON in payload.json"

      - name: Send Slack Notification via curl
        run: |
          curl -X POST -H 'Content-type: application/json' --data @payload.json ${{ secrets.SLACK_WEBHOOK }} || echo "curl failed"
        continue-on-error: true

      - name: Debug Curl Notification
        run: echo "Curl notification step completed with exit code $?"
