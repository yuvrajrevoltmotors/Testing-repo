name: Notify Slack on Issue Created

on:
  issues:
    types: [opened]

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Extract Label Names
        id: extract_labels
        run: |
          echo '${{ toJSON(github.event.issue.labels) }}' > labels.json
          LABELS=$(jq -r '[.[].name] | join(", ")' labels.json)
          if [ -z "$LABELS" ]; then
            LABELS="Not Set"
          fi
          echo "LABELS=$LABELS" >> "$GITHUB_ENV"
          echo "‚úÖ Extracted labels: $LABELS"

      - name: Check Slack Webhook
        run: |
          if [ -z "${{ secrets.SLACK_WEBHOOK }}" ]; then
            echo "‚ùå SLACK_WEBHOOK is not set or empty"
            exit 1
          else
            echo "‚úÖ SLACK_WEBHOOK is set"
          fi

      - name: Prepare Payload
        env:
          TITLE: ${{ github.event.issue.title }}
          ASSIGNEE: ${{ github.event.issue.assignee.login || 'Unassigned' }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
          LABELS: ${{ env.LABELS }}
        run: |
          cat <<EOF > payload.json
{
  "text": "üêû New GitHub Issue Created",
  "blocks": [
    {
      "type": "header",
      "text": {
        "type": "plain_text",
        "text": "üêû New GitHub Issue Created",
        "emoji": true
      }
    },
    {
      "type": "section",
      "fields": [
        {
          "type": "mrkdwn",
          "text": "*üìå Project:*\nRevolt Motors Website"
        },
        {
          "type": "mrkdwn",
          "text": "*üö® Labels:*\n${LABELS}"
        },
        {
          "type": "mrkdwn",
          "text": "*üìù Title:*\n${TITLE}"
        },
        {
          "type": "mrkdwn",
          "text": "*üë§ Assigned To:*\n${ASSIGNEE}"
        }
      ]
    },
    {
      "type": "section",
      "text": {
        "type": "mrkdwn",
        "text": "<${ISSUE_URL}|üîó View Issue>"
      }
    }
  ]
}
EOF
          echo "‚úÖ Payload file created:"
          cat payload.json

      - name: Send Slack Notification via curl
        run: |
          curl -X POST -H 'Content-type: application/json' --data @payload.json ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true

      - name: Debug Curl Notification
        run: echo "‚úÖ Curl notification step completed with exit code $?"
