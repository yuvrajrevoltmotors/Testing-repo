name: Notify Slack on Issue Created

on:
  issues:
    types: [opened]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Check Slack Webhook
        run: |
          if [ -z "${{ secrets.SLACK_WEBHOOK }}" ]; then
            echo "SLACK_WEBHOOK is not set or empty"
            exit 1
          else
            echo "SLACK_WEBHOOK is set"
          fi

      - name: Prepare Payload
        run: |
          echo '${{ toJSON(github.event.issue.labels) }}' > labels.json

          # Extract multiple labels as a comma-separated string
          LABELS=$(jq -r '[.[].name] | join(", ")' labels.json)
          if [ -z "$LABELS" ]; then
            LABELS="Not Set"
          fi

          TITLE="${{ github.event.issue.title || 'No Title' }}"
          ASSIGNEE="${{ github.event.issue.assignee.login || 'Unassigned' }}"
          ISSUE_URL="${{ github.event.issue.html_url || 'No URL' }}"

          # Create payload.json for Slack
          jq -n \
            --arg text "üêû New GitHub Issue Created" \
            --arg title "$TITLE" \
            --arg assignee "$ASSIGNEE" \
            --arg labels "$LABELS" \
            --arg issue_url "$ISSUE_URL" \
            '{
              text: $text,
              blocks: [
                {
                  type: "header",
                  text: { type: "plain_text", text: $text, emoji: true }
                },
                {
                  type: "section",
                  fields: [
                    { type: "mrkdwn", text: "*üìå Project:*\nRevolt Motors Website" },
                    { type: "mrkdwn", text: "*üö® Labels:*\n\($labels)" },
                    { type: "mrkdwn", text: "*üìù Title:*\n\($title)" },
                    { type: "mrkdwn", text: "*üë§ Assigned To:*\n\($assignee)" }
                  ]
                },
                {
                  type: "section",
                  text: { type: "mrkdwn", text: "<\($issue_url)|üîó View Issue>" }
                }
              ]
            }' > payload.json

          echo "‚úÖ Payload content:"
          cat payload.json

          jq . payload.json 2>/dev/null || echo "Invalid JSON in payload.json"

      - name: Send Slack Notification via curl
        run: |
          curl -X POST -H 'Content-type: application/json' --data @payload.json ${{ secrets.SLACK_WEBHOOK }} || echo "curl failed"
        continue-on-error: true

      - name: Debug Curl Notification
        run: echo "Curl notification step completed with exit code $?"
