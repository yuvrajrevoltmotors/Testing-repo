name: Notify Slack on Issue Created

on:
  issues:
    types: [opened]

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Extract label names
        run: |
          echo '${{ toJSON(github.event.issue.labels) }}' > labels.json
          LABELS=$(jq -r '[.[].name] | join(", ")' labels.json)
          if [ -z "$LABELS" ]; then
            LABELS="Not Set"
          fi
          echo "LABELS=$LABELS" >> $GITHUB_ENV

      - name: Prepare Slack Payload
        run: |
          jq -n \
            --arg text "🐞 New GitHub Issue Created" \
            --arg title "${{ github.event.issue.title }}" \
            --arg assignee "${{ github.event.issue.assignee.login || 'Unassigned' }}" \
            --arg issue_url "${{ github.event.issue.html_url }}" \
            --arg labels "$LABELS" \
            '{
              text: $text,
              blocks: [
                {
                  type: "header",
                  text: { type: "plain_text", text: $text, emoji: true }
                },
                {
                  type: "section",
                  fields: [
                    { type: "mrkdwn", text: "*📌 Project:*\nRevolt Motors Website" },
                    { type: "mrkdwn", text: "*🚨 Labels:*\n\($labels)" },
                    { type: "mrkdwn", text: "*📝 Title:*\n\($title)" },
                    { type: "mrkdwn", text: "*👤 Assigned To:*\n\($assignee)" }
                  ]
                },
                {
                  type: "section",
                  text: { type: "mrkdwn", text: "<\($issue_url)|🔗 View Issue>" }
                }
              ]
            }' > payload.json

          echo "Payload prepared:"
          cat payload.json

      - name: Send Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data @payload.json ${{ secrets.SLACK_WEBHOOK }}
